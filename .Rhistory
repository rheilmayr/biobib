teaching %<>%
mutate(Evaluations <- str_c("A(mean): ", teaching$eval_a, "\newlineB(mean): ", teaching$eval_b))
teaching
teaching %<>%
mutate(Evaluations <- str_c("A(mean): ", teaching$eval_a, "    B(mean): ", teaching$eval_b))
teaching %<>%
mutate(Evaluations = str_c("A(mean): ", teaching$eval_a, "    B(mean): ", teaching$eval_b))
teaching
research <- read_csv(paste0(data_dir, 'research.csv')) %>% na_replace()
research
published <- research %>%
filter(current_status==4)
first_new <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
aggregate(min = min(row_number))
first_new <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
slice(1) %>%
select(row_number)
first_new <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
slice(1) %>%
select(id)
first_new <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
aggregate(min = min(id))
first_new <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
slice(1) %>%
select(id)
first_new
published[first_new]
published[first_new,]
first_new <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
select(id) %>%
first()
first_new
first_new <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
select(id) %>%
first() %>% first()
first_new
new_row <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
select(id) %>%
first() %>% first()
published[new_row,]
old_row <- new_row - 1
published <- published %>%
add_row(Publisher = "added since last review", .after = old_row)
research[research$N.==15,] %<>% mutate(Authors = Authors %>%
str_replace("Carlson", "Carlson$^{\\\\dagger}$") %>%
str_replace("Heilmayr", "Heilmayr$^{\\\\dagger}$"))
research$Publisher =  apply(research %>% select(publisher, issue), 1, function(x) paste(na.omit(x), collapse=" "))
research <- research %>%
mutate(`Title and authors` = str_c("\\href{", research$Link, "}{", research$Title, " ", research$Authors, "}"),
Publisher = paste(research$publisher, ' ', research$issue))
published <- research %>%
filter(current_status==4)
new_row <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
select(id) %>%
first() %>%
first()
old_row <- new_row - 1
published <- published %>%
add_row(Publisher = "added since last review", .after = old_row)
published
reviewing$Activity <- reviewing %>%
mutate(journal <- str_c("\\textit{", journal, "}", sep = "") %>%
select(activity, journal, organization) %>%
apply(, 1, function(x) paste(na.omit(x), collapse="-"))
reviewing$Activity <- reviewing %>%
reviewing$Activity <- reviewing %>%
mutate(journal <- str_c("\\textit{", journal, "}", sep = "")
reviewing
reviewing <- read_csv(paste0(data_dir, 'reviewing.csv'))
reviewing$Activity <- reviewing %>%
mutate(journal <- str_c("\\textit{", journal, "}", sep = "")
reviewing
reviewing$Activity <- reviewing %>%
mutate(journal = str_c("\\textit{", journal, "}", sep = "")
reviewing
reviewing %>%
mutate(journal = str_c("\\textit{", journal, "}", sep = "")
reviewing <- reviewing %>%
reviewing <- reviewing %>%
mutate(journal = str_c("\\textit{", journal, "}")
reviewing
reviewing <- reviewing %>%
mutate(journal = str_c("\\textit{", reviewing$journal, "}")
reviewing
reviewing <- read_csv(paste0(data_dir, 'reviewing.csv'))
reviewing %>%
mutate(journal = str_c("\\textit{", reviewing$journal, "}")
reviewing %>%
mutate(journal = str_c("\\textit{", reviewing$journal, "}")
``
reviewing %>% mutate(journal = str_c("\\textit{", reviewing$journal, "}")
reviewing %>%
reviewing %>%
mutate(journal = str_c("\\textit{", reviewing$journal, "}"))
reviewing$Activity <- reviewing %>%
mutate(journal = str_c("\\textit{", reviewing$journal, "}")) %>%
select(activity, journal, organization) %>%
apply(1, function(x) paste(na.omit(x), collapse="-"))
reviewing
public
public <- read_csv(paste0(data_dir, 'public.csv'))
public
library(sp)
dms_2_dd <- function(d, m , s){
dd = d + m/60 + s/3600
return(dd)
}
dms_2_dd(1, 30, 0)
lon <- dms_2_dd(110, 10, 0)
lat <- dms_2_dd(1, 30, 0)
lat <- -dms_2_dd(1, 30, 0)
coordinates(data) <- c(lon, lat)
library(sp)
coordinates(data) <- c(lon, lat)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
lat <- -dms_2_dd(-2, 44, 0)
lon <- dms_2_dd(110, 56, 0)
lat <- -dms_2_dd(2, 44, 0)
lon <- dms_2_dd(110, 56, 0)
coordinates
lat
lon
dms_2_dd <- function(d, m , s, direction){
dd <- d + m/60 + s/3600
if direction %in% list("S", "W"):
dd <- -dd
return(dd)
}
dms_2_dd <- function(d, m , s, direction){
dd <- d + m/60 + s/3600
if direction %in% list("S", "W"){
dd <- -dd
}
return(dd)
}
dms_2_dd <- function(d, m , s, direction){
dd <- d + m/60 + s/3600
if direction %in% list("S", "W"){
dd <- -dd
}
return(dd)
}
dms_2_dd <- function(d, m , s, direction){
dd <- d + m/60 + s/3600
if direction %in% list("S", "W")
dd <- -dd
else
dd <- dd
return(dd)
}
dms_2_dd <- function(d, m , s, direction){
dd <- d + m/60 + s/3600
if direction %in% list("S", "W") dd <- -dd else dd <- dd
return(dd)
}
dms_2_dd <- function(d, m , s, direction){
dd <- d + m/60 + s/3600
if direction %in% list("S", "W") dd <- -dd
return(dd)
}
dms_2_dd <- function(d, m , s, direction) {
dd <- d + m/60 + s/3600
if direction %in% list("S", "W") dd <- -dd
return(dd)
}
dms_2_dd <- function(d, m , s, direction) {
dd <- d + m/60 + s/3600
if direction %in% list("S", "W")
-dd
else
dd
return(dd)
}
dms_2_dd <- function (d, m , s, direction) {
dd <- d + m/60 + s/3600
if direction %in% list("S", "W")
-dd
else
dd
return(dd)
}
dms_2_dd <- function (d, m , s, direction) {
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
lat <- -dms_2_dd(2, 44, 0, "S")
lon <- dms_2_dd(110, 56, 0, "E")
lat
lon
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
projection <- CRS("+proj=utm +zone=49S +datum=WGS84")
lon <- dms_2_dd(110, 56, 0, "E")
lat <- -dms_2_dd(2, 44, 0, "S")
data <- c(lon, lat)
tibble(lon, lat)
library(tidyverse)
tibble(lon, lat)
coordinates(data)
lon
lat
SpatialPoints(c(lon,lat), proj4string=wgs84)
SpatialPoints(tibble(lon,lat), proj4string=wgs84)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(lon,lat), proj4string=wgs84)
projection <- CRS("+proj=utm +zone=49S +datum=WGS84")
spTransform(coords,projection)
install.packages("rgdal")
spTransform(coords,projection)
lat <- c(1, 30, 0, "S")
lon <- c(110, 10, 0, "E")
dms_2_dd <- function (d, m , s, direction) {
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(lon)
dd_lat <- -dms_2_dd(2, 44, 0, "S")
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(dd_lon,dd_lat), proj4string=wgs84)
projection <- CRS("+proj=utm +zone=49S +datum=WGS84")
utm_coords <- spTransform(coords,projection)
utm_coords
lon <- (110, 10, 0, "E")
lon <- list(110, 10, 0, "E")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(lon)
library(zeallot)
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(lon)
lat <- list(1, 30, 0, "S")
dms_lat <- list(1, 30, 0, "S")
dms_lon <- list(110, 10, 0, "E")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(lon)
dd_lat <- -dms_2_dd(lon)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
dms_lat <- list(1, 30, 0, "S")
dms_lon <- list(110, 10, 0, "E")
desired_prj <- CRS("+proj=utm +zone=49S +datum=WGS84")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(lon)
dd_lat <- -dms_2_dd(lon)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(dd_lon,dd_lat), proj4string=wgs84)
utm_coords <- spTransform(coords, desired_prj)
utm_coords
dms_lat <- list(1, 30, 0, "S")
dms_lon <- list(110, 10, 0, "E")
utm <- CRS("+proj=utm +zone=49S +datum=WGS84")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(dd_lon)
dd_lat <- -dms_2_dd(dd_lat)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(dd_lon,dd_lat), proj4string=wgs84)
utm_coords <- spTransform(coords, utm)
utm_coords
dms_lat <- c(1, 30, 0, "S")
dms_lon <- c(110, 10, 0, "E")
utm <- CRS("+proj=utm +zone=49S +datum=WGS84")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(dd_lon)
dd_lat <- -dms_2_dd(dd_lat)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(dd_lon,dd_lat), proj4string=wgs84)
utm_coords <- spTransform(coords, utm)
utm_coords
dms_lat <- c(1, 30, 0, "S")
dms_lon <- c(110, 10, 0, "E")
utm <- CRS("+proj=utm +zone=49S +datum=WGS84")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(dms_lon)
dd_lat <- -dms_2_dd(dms_lat)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(dd_lon,dd_lat), proj4string=wgs84)
utm_coords <- spTransform(coords, utm)
utm_coords
dms_lat <- list(1, 30, 0, "S")
dms_lon <- list(110, 10, 0, "E")
utm <- CRS("+proj=utm +zone=49S +datum=WGS84")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(dms_lon)
dd_lat <- -dms_2_dd(dms_lat)
dd_lon
dd_lat
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(dd_lon,dd_lat), proj4string=wgs84)
utm_coords <- spTransform(coords, utm)
utm_coords
DD_LAT
dd_lat
dd_lon
dms_lat <- list(2, 44, 0, "S")
dms_lon <- list(110, 56, 0, "E")
utm <- CRS("+proj=utm +zone=49S +datum=WGS84")
dms_2_dd <- function (dms) {
c(d, m , s, direction) %<-% dms
dd <- d + m/60 + s/3600
if (direction %in% list("S", "W"))
-dd
else
dd
return(dd)
}
dd_lon <- dms_2_dd(dms_lon)
dd_lat <- -dms_2_dd(dms_lat)
wgs84 <- CRS("+proj=longlat + ellps=WGS84")
coords <- SpatialPoints(tibble(dd_lon,dd_lat), proj4string=wgs84)
utm_coords <- spTransform(coords, utm)
utm_coords
coords
students$Years
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(magrittr)
data_dir  <- 'D:/dev/cv/data/'
na_replace <- function(table) {
table <- table %>%
replace(is.na(.), "")
return(table)
}
mutate_cond <- function(.data, condition, ..., new_init = NA, envir = parent.frame()) {
# Initialize any new variables as new_init
new_vars <- substitute(list(...))[-1]
new_vars %<>% sapply(deparse) %>% names %>% setdiff(names(.data))
.data[, new_vars] <- new_init
condition <- eval(substitute(condition), .data, envir)
.data[condition, ] <- .data %>% filter(condition) %>% mutate(...)
.data
}
research <- read_csv(paste0(data_dir, '1_research/research.csv'))
students <- read_csv(paste0(data_dir, '2_teaching/students.csv'))
students$Name <- paste(students$first_name, ' ', students$last_name)
students$`Optional info` <- students %>%
mutate_cond(Where != "UCSB", uni_note = Where) %>%
select(uni_note, Awards, Notes) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
students$Years <- students %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse=" - "))
students %<>%
mutate("Year completed" = replace(end_date, end_date=="present", "Current student"))
undergrads <- students %>%
filter(Type=="Undergraduate",
review_period==rperiod) %>%
select("Name", "Project type", "Optional info", "Year completed")
students
students$Years
students <- read_csv(paste0(data_dir, '2_teaching/students.csv'))
students$Name <- paste(students$first_name, ' ', students$last_name)
students$`Optional info` <- students %>%
mutate_cond(Where != "UCSB", uni_note = Where) %>%
select(uni_note, Awards, Notes) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
students$Years <- students %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse=" - "))
students %<>%
mutate("Year completed" = replace(end_date, end_date=="present", "Current student"))
sutdents$Years
sutdents$Year
students$Years
students <- students %>%
mutate(end_date = replace(end_date, end_date==start_date, NaN)
)
students
students$Years <- students %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse=" - "))
students
students$Years
students <- read_csv(paste0(data_dir, '2_teaching/students.csv'))
students$Name <- paste(students$first_name, ' ', students$last_name)
students$`Optional info` <- students %>%
mutate_cond(Where != "UCSB", uni_note = Where) %>%
select(uni_note, Awards, Notes) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
students <- students %>%
mutate(end_date = replace(end_date, end_date==start_date, NA))
students$Years <- students %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse=" - "))
students %<>%
mutate("Year completed" = replace(end_date, end_date=="present", "Current student"))
students$Years
1-.043+.0063
.9633^20
1-.0084+.0014
.993^20
students <- read_csv(paste0(data_dir, '2_teaching/students.csv'))
students$Name <- paste(students$first_name, ' ', students$last_name)
students$`Optional info` <- students %>%
mutate_cond(Where != "UCSB", uni_note = Where) %>%
select(uni_note, Awards, Notes) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
students <- students %>%
mutate(end_date = replace(start_date, start_date==end_date, NA))
students$Years <- students %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse=" - "))
students %<>%
mutate("Year completed" = replace(end_date, end_date=="present", "Current student"))
undergrads <- students %>%
filter(Type=="Undergraduate",
review_period==rperiod) %>%
select("Name", "Project type", "Optional info", "Year completed")
undergrads
rperiod = 2
undergrads <- students %>%
filter(Type=="Undergraduate",
review_period==rperiod) %>%
select("Name", "Project type", "Optional info", "Year completed")
undergrads
students
students <- read_csv(paste0(data_dir, '2_teaching/students.csv'))
students <- students %>%
mutate(end_date = replace(start_date, start_date==end_date, NA))
students
patents <- read_csv(paste0(data_dir, '3_professional/patents.csv'))
patents
patents <- read_csv(paste0(data_dir, '3_professional/patents.csv'))
patents
