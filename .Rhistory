library(magrittr)
library(readxl)
library(scales)
data_dir  <- 'D:/dev/biobib/data/'
na_replace <- function(table) {
table <- table %>%
replace(is.na(.), "")
return(table)
}
research <- read_excel(paste0(data_dir, '1_research/research.xlsx'))
students <- read_excel(paste0(data_dir, '2_teaching/students.xlsx'))
teaching <- read_excel(paste0(data_dir, '2_teaching/teaching.xlsx'))
guest_lectures <- read_excel(paste0(data_dir, '2_teaching/guest_lectures.xlsx'))
gps <- read_excel(paste0(data_dir, '2_teaching/gps.xlsx'))
mentoring <- read_excel(paste0(data_dir, '2_teaching/mentoring.xlsx'))
grants <- read_excel(paste0(data_dir, '3_professional/grants.xlsx'))  ## to update
reviewing <- read_excel(paste0(data_dir, '3_professional/reviewing.xlsx'))
appointments <- read_excel(paste0(data_dir, '3_professional/appointments.xlsx'))
organizing <- read_excel(paste0(data_dir, '3_professional/organizing.xlsx'))
patents <- read_excel(paste0(data_dir, '3_professional/patents.xlsx'))
university <- read_excel(paste0(data_dir, '4_service/university.xlsx'))
public_writing <- read_excel(paste0(data_dir, '4_service/public_writing.xlsx'))
media <- read_excel(paste0(data_dir, '4_service/media.xlsx'))
public_speaking <- read_excel(paste0(data_dir, '4_service/public_speaking.xlsx'))
university <- read_excel(paste0(data_dir, '4_service/university.xlsx'))
public_writing <- read_excel(paste0(data_dir, '4_service/public_writing.xlsx'))
media <- read_excel(paste0(data_dir, '4_service/media.xlsx'))
public_speaking <- read_excel(paste0(data_dir, '4_service/public_speaking.xlsx'))
research[research$N.==15,] %<>% mutate(Authors = Authors %>%
str_replace("Carlson", "Carlson$^{\\\\dagger}$") %>%
str_replace("Heilmayr", "Heilmayr$^{\\\\dagger}$"))
research <- research %>%
mutate(Year = as.character(Year))
research$Publisher <- research %>%
mutate(journal = str_c("\\textit{", research$journal, "}")) %>%
select(journal, publisher, issue) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
research <- research %>%
mutate(Title = ifelse(Category=="Book",
str_c("\\textit{", Title, '}'),
str_c("``", Title, "''")),
`Title and authors` = ifelse(is.na(temp_link),
str_c(Title, ", ", Authors),
str_c("\\href{", temp_link, "}{", Title, " ", Authors, "}")),
`N.` = as.character(`N.`))
research[research$prev_status==3,] %<>% mutate(N. = paste0(N., "*"))
research[research$prev_status==2,] %<>% mutate(N. = paste0(N., "**"))
research[research$prev_status==1,] %<>% mutate(N. = paste0(N., "***"))
published <- research %>%
filter(current_status==4)
new_row <- published %>%
mutate(id = row_number()) %>%
filter(review_period == rperiod) %>%
select(id) %>%
first() %>%
first()
old_row <- new_row - 1
published <- published %>%
select("N.", "Year", "Title and authors", "Publisher", "Category")
research <- read_excel(paste0(data_dir, '1_research/research.xlsx'))
research[research$N.==15,] %<>% mutate(Authors = Authors %>%
str_replace("Carlson", "Carlson$^{\\\\dagger}$") %>%
str_replace("Heilmayr", "Heilmayr$^{\\\\dagger}$"))
research <- research %>%
mutate(Year = as.character(Year))
research$Publisher <- research %>%
mutate(journal = str_c("\\textit{", research$journal, "}")) %>%
select(journal, publisher, issue) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
research <- research %>%
mutate(Title = ifelse(Category=="Book",
str_c("\\textit{", Title, '}'),
str_c("``", Title, "''")),
`Title and authors` = ifelse(is.na(temp_link),
str_c(Title, ", ", Authors),
str_c("\\href{", temp_link, "}{", Title, " ", Authors, "}")),
`N.` = as.character(`N.`))
published <- published %>%
select("N.", "Year", "Title and authors", "Publisher", "Category")
# published <- published %>%
#   filter(N. != "18***")
published %>%
kable("latex", booktabs = TRUE, longtable = TRUE, escape = FALSE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header")) %>%
# kable_styling(latex_options = "striped") %>%
column_spec(c(1), width = "2em") %>%
column_spec(c(2), width = "3em") %>%
column_spec(c(3), width = "21em") %>%
column_spec(c(4), width = "10em") %>%
column_spec(c(5), width = "3em") %>%
row_spec(c(old_row[[1]]), extra_latex_after = "\\noalign{\\global\\arrayrulewidth=0.6mm}\\arrayrulecolor{red}\\cline{1-5}") %>%
row_spec(row = new_row[[1]], color = "red", font_size = 8, extra_latex_after = "\\arrayrulecolor{black}") %>%
footnote(symbol =  c("Previously listed as work in press", "Previously listed as work submitted",
"Previously listed as work in progress", "Denotes equal contribution"),
symbol_manual = c("*", "**", "***", "$\\\\dagger$"))
published
# published <- published %>%
#   filter(N. != "18***")
published %>%
kable("latex", booktabs = TRUE, longtable = TRUE, escape = FALSE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header")) %>%
# kable_styling(latex_options = "striped") %>%
column_spec(c(1), width = "2em") %>%
column_spec(c(2), width = "3em") %>%
column_spec(c(3), width = "21em") %>%
column_spec(c(4), width = "10em") %>%
column_spec(c(5), width = "3em") %>%
row_spec(c(old_row[[1]]), extra_latex_after = "\\noalign{\\global\\arrayrulewidth=0.6mm}\\arrayrulecolor{red}\\cline{1-5}") %>%
row_spec(row = new_row[[1]], color = "red", font_size = 8, extra_latex_after = "\\arrayrulecolor{black}") %>%
footnote(symbol =  c("Previously listed as work in press", "Previously listed as work submitted",
"Previously listed as work in progress", "Denotes equal contribution"),
symbol_manual = c("*", "**", "***", "$\\\\dagger$")) %>%
arrange(desc(N.))
published <- published %>%
select("N.", "Year", "Title and authors", "Publisher", "Category") %>%
arrange(desc("N."))
published
published <- published %>%
select("N.", "Year", "Title and authors", "Publisher", "Category") %>%
arrange(desc(`N.`))
publisehd
published <- published %>%
published
research[research$N.==15,] %<>% mutate(Authors = Authors %>%
str_replace("Carlson", "Carlson$^{\\\\dagger}$") %>%
str_replace("Heilmayr", "Heilmayr$^{\\\\dagger}$"))
research <- research %>%
mutate(Year = as.character(Year))
research <- read_excel(paste0(data_dir, '1_research/research.xlsx'))
research[research$N.==15,] %<>% mutate(Authors = Authors %>%
str_replace("Carlson", "Carlson$^{\\\\dagger}$") %>%
str_replace("Heilmayr", "Heilmayr$^{\\\\dagger}$"))
research <- research %>%
mutate(Year = as.character(Year))
research$Publisher <- research %>%
mutate(journal = str_c("\\textit{", research$journal, "}")) %>%
select(journal, publisher, issue) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
research <- research %>%
mutate(Title = ifelse(Category=="Book",
str_c("\\textit{", Title, '}'),
str_c("``", Title, "''")),
`Title and authors` = ifelse(is.na(temp_link),
str_c(Title, ", ", Authors),
str_c("\\href{", temp_link, "}{", Title, " ", Authors, "}")),
`N.` = as.character(`N.`))
research
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(magrittr)
library(readxl)
library(scales)
data_dir  <- 'D:/dev/biobib/data/'
na_replace <- function(table) {
table <- table %>%
replace(is.na(.), "")
return(table)
}
page_width <- round((6.5 / 0.13837) - 8) # Convert page width to em and reduce a bit for padding
# mutate_cond <- function(.data, condition, ..., new_init = NA, envir = parent.frame()) {
#   # Initialize any new variables as new_init
#   new_vars <- substitute(list(...))[-1]
#   new_vars %<>% sapply(deparse) %>% names %>% setdiff(names(.data))
#   .data[, new_vars] <- new_init
#
#   condition <- eval(substitute(condition), .data, envir)
#   .data[condition, ] <- .data %>% filter(condition) %>% mutate(...)
#   .data
# }
research <- read_excel(paste0(data_dir, '1_research/research.xlsx'))
students <- read_excel(paste0(data_dir, '2_teaching/students.xlsx'))
teaching <- read_excel(paste0(data_dir, '2_teaching/teaching.xlsx'))
guest_lectures <- read_excel(paste0(data_dir, '2_teaching/guest_lectures.xlsx'))
gps <- read_excel(paste0(data_dir, '2_teaching/gps.xlsx'))
mentoring <- read_excel(paste0(data_dir, '2_teaching/mentoring.xlsx'))
grants <- read_excel(paste0(data_dir, '3_professional/grants.xlsx'))  ## to update
lectures <- read_excel(paste0(data_dir, '3_professional/lectures.xlsx'))
reviewing <- read_excel(paste0(data_dir, '3_professional/reviewing.xlsx'))
appointments <- read_excel(paste0(data_dir, '3_professional/appointments.xlsx'))
organizing <- read_excel(paste0(data_dir, '3_professional/organizing.xlsx'))
patents <- read_excel(paste0(data_dir, '3_professional/patents.xlsx'))
university <- read_excel(paste0(data_dir, '4_service/university.xlsx'))
# public <- read_csv(paste0(data_dir, '4_service/public.csv'))
public_writing <- read_excel(paste0(data_dir, '4_service/public_writing.xlsx'))
media <- read_excel(paste0(data_dir, '4_service/media.xlsx'))
public_speaking <- read_excel(paste0(data_dir, '4_service/public_speaking.xlsx'))
rperiod = 4
research$Publisher <- research %>%
mutate(journal = str_c("\\textit{", research$journal, "}")) %>%
select(journal, publisher, issue) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
grants <- grants %>%
mutate(`Amount (PI share)` = paste0(comma(amount), "\n(", comma(personal_share), ")"),
end_date = replace(end_date, end_date==start_date, NA))
grants$Years = apply(grants %>% select(start_date, end_date), 1, function(x) paste(na.omit(x), collapse="-"))
grants <- grants %>%
filter(review_period == rperiod) %>%
filter(outcome == "Accepted") %>%
select(Years, Source, Title, "Amount (PI share)", Role, `New/Cont.`)
grants %>%
mutate_all(linebreak) %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace", escape = F) %>%
kable_styling(latex_options = c("repeat_header")) %>%
# kable_styling(latex_options = c("striped")) %>%
column_spec(c(1), width = "4em") %>%
column_spec(c(2), width = "7em") %>%
column_spec(c(3), width = "13em") %>%
column_spec(c(4), width = "5em") %>%
column_spec(c(5), width = "5em") %>%
column_spec(c(6), width = "3em")
grants
grants <- read_excel(paste0(data_dir, '3_professional/grants.xlsx'))  ## to update
grants <- grants %>%
mutate(`Amount (PI share)` = paste0(comma(amount), "\n(", comma(personal_share), ")"),
end_date = replace(end_date, end_date==start_date, NA))
grants$Years = apply(grants %>% select(start_date, end_date), 1, function(x) paste(na.omit(x), collapse="-"))
grants
grants %>%
filter(`New/Cont.` == "Cont.")
cont_fund <- grants %>%
filter(`New/Cont.` == "New")
cont_fund
cont_fund <- grants %>%
filter(`New/Cont.` == "Cont.")
cont_fund
grants <- grants %>%
filter(review_period == rperiod) %>%
filter(outcome == "Accepted") %>%
select(Years, Source, Title, "Amount (PI share)", Role, `New/Cont.`)
cont_fund <- grants %>%
filter(`New/Cont.` == "Cont.")
cont_fund
grants <- read_excel(paste0(data_dir, '3_professional/grants.xlsx'))  ## to update
grants <- grants %>%
mutate(`Amount (PI share)` = paste0(comma(amount), "\n(", comma(personal_share), ")"),
end_date = replace(end_date, end_date==start_date, NA))
grants$Years = apply(grants %>% select(start_date, end_date), 1, function(x) paste(na.omit(x), collapse="-"))
grants <- grants %>%
filter(review_period == rperiod) %>%
filter(outcome == "Accepted")
cont_fund <- grants %>%
filter(`New/Cont.` == "Cont.")
cont_fund
cont_fund
cont_fund$amount %>% sum()
grants <- read_excel(paste0(data_dir, '3_professional/grants.xlsx'))  ## to update
grants
grants <- grants %>%
filter(review_period == rperiod) %>%
filter(outcome == "Accepted")
cont_fund <- grants %>%
filter(`New/Cont.` == "Cont.")
new_fund <- grants %>%
filter(`New/Cont.` == "New")
summary_grants <- tibble("Title" = c("Total continuing funding", "Total new funding", "Total funding during review"),
"amount" = c(sum(cont_fund$amount), sum(new_fund$amount), sum(cont_fund$amount, new_fund$amount)))
summary_grants
summary_grants <- tibble("Title" = c("Total continuing funding", "Total new funding", "Total funding during review"),
"amount" = c(sum(cont_fund$amount), sum(new_fund$amount), sum(cont_fund$amount, new_fund$amount)),
"personal_share" = c(sum(cont_fund$personal_share), sum(new_fund$personal_share), sum(cont_fund$personal_share, new_fund$personal_share)))
summary_grants
grants %>%
rbind(summary_grants)
grants %>%
bind_rows(summary_grants)
grants
grants <- grants %>%
bind_rows(summary_grants) %>%
mutate(`Amount (PI share)` = paste0(comma(amount), "\n(", comma(personal_share), ")"),
end_date = replace(end_date, end_date==start_date, NA))
grants$Years = apply(grants %>% select(start_date, end_date), 1, function(x) paste(na.omit(x), collapse="-"))
grants %>%
select(Years, Source, Title, "Amount (PI share)", Role, `New/Cont.`) %>%
mutate_all(linebreak) %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace", escape = F) %>%
kable_styling(latex_options = c("repeat_header")) %>%
# kable_styling(latex_options = c("striped")) %>%
column_spec(c(1), width = "4em") %>%
column_spec(c(2), width = "7em") %>%
column_spec(c(3), width = "13em") %>%
column_spec(c(4), width = "5em") %>%
column_spec(c(5), width = "5em") %>%
column_spec(c(6), width = "3em")
grants
grants %>%
select(Years, Source, Title, "Amount (PI share)", Role, `New/Cont.`) %>%
mutate_all(linebreak) %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace", escape = F) %>%
kable_styling(latex_options = c("repeat_header")) %>%
# kable_styling(latex_options = c("striped")) %>%
column_spec(c(1), width = "4em") %>%
column_spec(c(2), width = "7em") %>%
column_spec(c(3), width = "13em") %>%
column_spec(c(4), width = "5em") %>%
column_spec(c(5), width = "5em") %>%
column_spec(c(6), width = "3em") %>%
row_spec(-1,bold=T)
grants
n_grants <- dim(grants)[1]
n_grants
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(magrittr)
library(readxl)
library(scales)
options(knitr.kable.NA = '')
data_dir  <- 'D:/dev/biobib/data/'
na_replace <- function(table) {
table <- table %>%
replace(is.na(.), "")
return(table)
}
page_width <- round((6.5 / 0.13837) - 8) # Convert page width to em and reduce a bit for padding
# mutate_cond <- function(.data, condition, ..., new_init = NA, envir = parent.frame()) {
#   # Initialize any new variables as new_init
#   new_vars <- substitute(list(...))[-1]
#   new_vars %<>% sapply(deparse) %>% names %>% setdiff(names(.data))
#   .data[, new_vars] <- new_init
#
#   condition <- eval(substitute(condition), .data, envir)
#   .data[condition, ] <- .data %>% filter(condition) %>% mutate(...)
#   .data
# }
research <- read_excel(paste0(data_dir, '1_research/research.xlsx'))
students <- read_excel(paste0(data_dir, '2_teaching/students.xlsx'))
teaching <- read_excel(paste0(data_dir, '2_teaching/teaching.xlsx'))
guest_lectures <- read_excel(paste0(data_dir, '2_teaching/guest_lectures.xlsx'))
gps <- read_excel(paste0(data_dir, '2_teaching/gps.xlsx'))
mentoring <- read_excel(paste0(data_dir, '2_teaching/mentoring.xlsx'))
grants <- read_excel(paste0(data_dir, '3_professional/grants.xlsx'))  ## to update
lectures <- read_excel(paste0(data_dir, '3_professional/lectures.xlsx'))
reviewing <- read_excel(paste0(data_dir, '3_professional/reviewing.xlsx'))
appointments <- read_excel(paste0(data_dir, '3_professional/appointments.xlsx'))
organizing <- read_excel(paste0(data_dir, '3_professional/organizing.xlsx'))
patents <- read_excel(paste0(data_dir, '3_professional/patents.xlsx'))
university <- read_excel(paste0(data_dir, '4_service/university.xlsx'))
# public <- read_csv(paste0(data_dir, '4_service/public.csv'))
public_writing <- read_excel(paste0(data_dir, '4_service/public_writing.xlsx'))
media <- read_excel(paste0(data_dir, '4_service/media.xlsx'))
public_speaking <- read_excel(paste0(data_dir, '4_service/public_speaking.xlsx'))
rperiod = 4
university <- read_excel(paste0(data_dir, '4_service/university.xlsx'))
university$`Academic year` <- university %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse="-"))
university$`Type of service` <- apply(university %>% select(department, committee), 1, function(x) paste(na.omit(x), collapse=", "))
# university$`Type of service` <- apply(university %>% select(department, committee), 1, function(x) paste(na.omit(x), collapse=", "))
university <- university %>%
rename(`Type of service` = committee)
university <- read_excel(paste0(data_dir, '4_service/university.xlsx'))
university$`Academic year` <- university %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse="-"))
# university$`Type of service` <- apply(university %>% select(department, committee), 1, function(x) paste(na.omit(x), collapse=", "))
university <- university %>%
rename(`Type of service` = committee,
Level = level)
university <- university %>%
filter(review_period == rperiod) %>%
select("Academic year", Position, "Type of service")
university %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header")) %>%
column_spec(c(3), width = "30em")
university$`Academic year` <- university %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse="-"))
teaching <- read_excel(paste0(data_dir, '2_teaching/teaching.xlsx'))
---
```{r, include=FALSE}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(knitr)
library(kableExtra)
library(magrittr)
library(readxl)
library(knitr)
library(kableExtra)
library(magrittr)
library(readxl)
library(scales)
options(knitr.kable.NA = '')
data_dir  <- 'D:/dev/biobib/data/'
na_replace <- function(table) {
table <- table %>%
replace(is.na(.), "")
return(table)
}
page_width <- round((6.5 / 0.13837) - 8) # Convert page width to em and reduce a bit for padding
research <- read_excel(paste0(data_dir, '1_research/research.xlsx'))
students <- read_excel(paste0(data_dir, '2_teaching/students.xlsx'))
teaching <- read_excel(paste0(data_dir, '2_teaching/teaching.xlsx'))
guest_lectures <- read_excel(paste0(data_dir, '2_teaching/guest_lectures.xlsx'))
gps <- read_excel(paste0(data_dir, '2_teaching/gps.xlsx'))
mentoring <- read_excel(paste0(data_dir, '2_teaching/mentoring.xlsx'))
View(teaching)
\newpage
students$Name <- paste(students$first_name, ' ', students$last_name)
students$`Optional info` <- students %>%
mutate(uni_note = ifelse(Where != "UCSB", Where, NA)) %>%
select(uni_note, Awards, Notes) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
students <- students %>%
mutate(start_date = replace(start_date, start_date==end_date, NA))
students$Years <- students %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse=" - "))
students %<>%
mutate("Year completed" = replace(end_date, end_date=="present", "Current student"))
undergrads <- students %>%
filter(Type=="Undergraduate",
review_period==rperiod) %>%
rename(Student = Name) %>%
arrange(`Year completed`) %>%
select("Student", "Year completed", "Project type")
# select("Student", "Year completed", "Project type", "Optional info")
undergrads %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header")) %>%
column_spec(c(1), width = "8em") %>%
column_spec(c(2), width = "8em") %>%
column_spec(c(3), width = "8em")
undergrads <- students %>%
filter(Type=="Undergraduate",
review_period==rperiod) %>%
rename(Student = Name) %>%
arrange(`Year completed`) %>%
select("Student", "Year completed", "Project type")
students
university <- read_excel(paste0(data_dir, '4_service/university.xlsx'))
students <- read_excel(paste0(data_dir, '2_teaching/students.xlsx'))
students$Name <- paste(students$first_name, ' ', students$last_name)
students$`Optional info` <- students %>%
mutate(uni_note = ifelse(Where != "UCSB", Where, NA)) %>%
select(uni_note, Awards, Notes) %>%
apply(1, function(x) paste(na.omit(x), collapse=", "))
students <- students %>%
mutate(start_date = replace(start_date, start_date==end_date, NA))
students$Years <- students %>%
select(start_date, end_date) %>%
apply(1, function(x) paste(na.omit(x), collapse=" - "))
students %<>%
mutate("Year completed" = replace(end_date, end_date=="present", "Current student"))
students
rperiod = 4
undergrads <- students %>%
filter(Type=="Undergraduate",
review_period==rperiod) %>%
rename(Student = Name) %>%
arrange(`Year completed`) %>%
select("Student", "Year completed", "Project type")
# select("Student", "Year completed", "Project type", "Optional info")
undergrads %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header")) %>%
column_spec(c(1), width = "8em") %>%
column_spec(c(2), width = "8em") %>%
column_spec(c(3), width = "8em")
masters <- students %>%
filter(Type=="Masters",
review_period==rperiod) %>%
rename(Student = Name) %>%
arrange(`Year completed`) %>%
select("Student", "Year completed", "Chair/Member")
masters %>%
kable("latex", booktabs = TRUE, longtable = TRUE) %>%
kable_styling(latex_options = c("repeat_header")) %>%
column_spec(c(1), width = "8em") %>%
column_spec(c(2), width = "8em") %>%
column_spec(c(3), width = "8em")
phds <- students %>%
filter(Type=="Ph.D.", review_period==rperiod) %>%
rename(Student = Name) %>%
arrange(`Year completed`) %>%
select("Student", "Year completed", "Chair/Member")
phds %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header")) %>%
# column_spec(c(4), width = "20em") %>%
column_spec(c(1), width = "8em") %>%
column_spec(c(2), width = "8em") %>%
column_spec(c(3), width = "8em")
postdocs <- students %>%
filter(Type=="postdoc", review_period==rperiod) %>%
arrange(end_date, start_date) %>%
select(Name, Years)
postdocs %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header"))
other_scholars <- students %>%
filter(Type=="other_scholar", review_period==rperiod) %>%
arrange(end_date, start_date) %>%
rename(Position = "Project type")
select(Name, Years, Position)
other_scholars <- students %>%
filter(Type=="other_scholar", review_period==rperiod) %>%
arrange(end_date, start_date) %>%
rename(Position = "Project type") %>%
select(Name, Years, Position)
# select(Name, Years, "Project type", "Optional info")
other_scholars %>%
kable("latex", booktabs = TRUE, longtable = TRUE, linesep = "\\addlinespace") %>%
kable_styling(latex_options = c("repeat_header")) %>%
column_spec(c(1), width = "8em") %>%
column_spec(c(2), width = "8em") %>%
column_spec(c(3), width = "8em")
